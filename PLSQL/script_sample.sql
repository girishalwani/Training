select * from emp;

SET SERVEROUTPUT ON
BEGIN
DBMS_OUTPUT.PUT_LINE('This string breaks
here.');
END;

SET SERVEROUTPUT ON
DECLARE
NUM1 NUMBER;
NUM2 NUMBER;
BEGIN
NUM1:=&NUM1;
NUM2:=&NUM2;
-- IF CONDITIONS 
IF NUM1 > NUM2 THEN
   DBMS_OUTPUT.PUT_LINE(NUM1);
ELSIF NUM2 > NUM1 THEN
   DBMS_OUTPUT.PUT_LINE(NUM2);
ELSE
   DBMS_OUTPUT.PUT_LINE('BOTH ARE SAME');
END IF;
END;
/


SET SERVEROUTPUT ON
DECLARE 
 v_sal emp.sal%type;

BEGIN
    select sal into v_sal from emp where ename='SCOTT';
    dbms_output.put_line(v_sal);
END;


--set autoprint on
variable v_bind varchar2(30)
exec :v_bind:='Girish'


variable v_bind1 varchar2(30);
begin
:v_bind1:='Girish';
dbms_output.put_line(:v_bind1);
end;

set serveroutput on;
DECLARE
v_sal emp.sal%type;
v_comm emp.comm%type;
v_name emp.ename%type;

BEGIN
    v_name:='&ename';
    select sal,nvl(comm,0) into v_sal,v_comm from emp where ename=v_name;
    dbms_output.put_line('NETSAL (SAL+COMM)= ' || (v_sal+v_comm));
END;

DECLARE
EMPROW EMP%ROWTYPE;
ENO EMP.EMPNO%TYPE;-- IT WILL SEE THE DATA TYPE AND SIZE IN THE TABLE THAT IS USED AND DECLARE THE SAME TYPE
BEGIN
ENO:=&EMPNO;
SELECT * INTO EMPROW FROM EMP WHERE EMPNO=ENO;
DBMS_OUTPUT.PUT_LINE(EMPROW);
END;

select * from emp

-- cursor

DECLARE
NAME EMP.ENAME%TYPE;
CURSOR EMP_CUR IS SELECT ENAME FROM EMP;
BEGIN
OPEN EMP_CUR;
LOOP
FETCH EMP_CUR INTO NAME;
EXIT WHEN EMP_CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(NAME);
END LOOP;
CLOSE EMP_CUR;
END;

---rowtype cursor
DECLARE
CURSOR EMP_CUR IS SELECT ENAME,DNAME,LOC,SAL,JOB FROM EMP NATURAL JOIN DEPT;
VAR_CUR EMP_CUR%ROWTYPE;
BEGIN
OPEN EMP_CUR;
LOOP
FETCH EMP_CUR INTO VAR_CUR;
EXIT WHEN EMP_CUR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(VAR_CUR.ENAME||' | '||VAR_CUR.DNAME);
END LOOP;
CLOSE EMP_CUR;
END;


--implicit cursor
DECLARE
NEWSAL NUMBER;
NAME VARCHAR2(10);
BEGIN
NEWSAL:=&NEWSAL;
NAME:='&NAME';
UPDATE EMP SET SAL = NEWSAL WHERE ENAME = NAME;
IF SQL%ROWCOUNT>0 THEN
DBMS_OUTPUT.PUT_LINE('THE SAL IS UPDATED');
ELSE
DBMS_OUTPUT.PUT_LINE('THE SAL IS NOT UPDATED AS ENAME IS NOT MATCHING');
END IF;
END;


--parameterized cursor

DECLARE
EVAL EMP%ROWTYPE;
CURSOR CUR(DNO NUMBER) IS SELECT * FROM EMP WHERE DEPTNO = DNO;
BEGIN
OPEN CUR(10);
FETCH CUR INTO EVAL;
DBMS_OUTPUT.PUT_LINE(EVAL.ENAME||' '||EVAL.DEPTNO);
CLOSE CUR;
OPEN CUR(20);
FETCH CUR INTO EVAL;
DBMS_OUTPUT.PUT_LINE(EVAL.ENAME||' '||EVAL.DEPTNO);
END;


--dynamic cursor

DECLARE
TYPE REF_CUR_TYPE IS REF CURSOR;
REF_CUR REF_CUR_TYPE;
EVAL EMP%ROWTYPE;
DVAL DEPT%ROWTYPE;
BEGIN
OPEN REF_CUR FOR SELECT * FROM EMP;
FETCH REF_CUR INTO EVAL;
DBMS_OUTPUT.PUT_LINE(EVAL.ENAME);
CLOSE REF_CUR;
OPEN REF_CUR FOR SELECT * FROM DEPT;
FETCH REF_CUR INTO DVAL;
DBMS_OUTPUT.PUT_LINE(DVAL.DNAME);
CLOSE REF_CUR;
END;



